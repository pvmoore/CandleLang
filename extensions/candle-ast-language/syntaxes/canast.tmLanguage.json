{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "canast",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings-double"
		},
		{
			"include": "#strings-single"
		},
		{
			"include": "#number-literals"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"match": "\\b(not comptime|comptime|type|kind|target|to|nid|params|refs|subtype|length|line|size|align|packed|location)(\\*+|\\b)",
					"name": "entity.name.tag.canast"
				},
				{
					"match": "\\b(const|if|while|return|import|assert|not|is|as|and|or|else|break|continue|loop|choose)\\b",
					"name": "keyword.control.canast"
				},
				{
					"match": "\\b(bool|byte|ubyte|short|ushort|int|uint|long|ulong|float|half|double|void|struct|enum)(\\*+|\\b)",
					"name": "storage.type.canast"
				},
				{
					"match": "\\b(Alias|As|Binary|BuiltinFunc|Break|Call|Case|Continue|Dot|Enum|Func|Id|Import|NodeRef|LiteralStruct|Null|Number|Module|ModuleId|Return|Scope|Struct|TypeRef|Unary|Union|Unit|UnresolvedType|Var)(\\*+|\\b)",
					"name": "keyword.control.canast"
				},
				{
					"match": "\\b(unresolved)\\b",
					"name": "error.canast"
				},
				{
					"match": "\\b(pub|extern|returns)\\b",
					"name": "storage.modifier.canast"
				},
				{
					"match": "@[_\\w]+\\b",
					"name": "support.function.canast"
				},
				{
					"match": "\\[\\[.*\\]\\]",
					"name": "entity.name.tag.canast"
				},
				{
					"match": "\\b(true|false|null)(\\**|\\b)",
					"name": "constant.numeric"
				},
				{
					"match": "\\b(this)(\\**|\\b)",
					"name": "entity.other.this.canast"
				}
			]
		},
		"number-literals": {
			"patterns": [
				{
					"match": "\\b([\\d_]+\\.[\\d_]+(f|d|h)?)\\b",
					"name": "constant.numeric.float"
				},
				{
					"match": "\\b[\\d_]+\\b",
					"name": "constant.numeric"
				},
				{
					"match": "\\b0b[0-1_]+\\b",
					"name": "constant.numeric.binary"
				},
				{
					"match": "\\b0x[\\d_a-fA-F]+\\b",
					"name": "constant.numeric.hex"
				}
			]
		},
		"strings-double": {
			"begin": "'",
			"end": "'",
			"name": "string.quoted.double.canast",
			"patterns": [
				{
					"match": "\\\\.",
					"name": "constant.character.escape.canast"
				}
			]
		},
		"strings-single": {
			"begin": "\"",
			"end": "\"",
			"name": "string.quoted.single.canast",
			"patterns": [
				{
					"match": "\\\\.",
					"name": "constant.character.escape.canast"
				}
			]
		}
	},
	"scopeName": "source.canast"
}
